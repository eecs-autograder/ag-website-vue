version: '3'

services:
  nginx:
    image: nginx:latest
    restart: no
    container_name: ag-vue-e2e-nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx/conf.d/:/etc/nginx/conf.d

  website:
    restart: no
    build:
      context: ../../../
      dockerfile: Dockerfile-website-dev
    container_name: ag-vue-e2e-website
    expose:
      - "8080"
    volumes:
      - ../../../src:/usr/src/app/src
      - ../../../tests:/usr/src/app/tests
      - ../../../public:/usr/src/app/public
    command: npm run serve -- --host website

  django:
    restart: no
    build:
      context: ./autograder-server
      dockerfile: Dockerfile-django-dev
    container_name: ag-vue-e2e-django
    expose:
      - "8000"
    volumes:
      - ./autograder-server:/usr/src/app
    command: >-
      python3 manage.py runserver 0.0.0.0:8000

    env_file:
      - ./autograder-server/_dev.env
    environment:
      # Set to false to disable real authentication. Any other string value
      # will enable real authentication.
      # Then, using a browser plugin such as EditThisCookie, set the
      # cookie "username=<email>" to set which user you want to
      # authenticate as.
      USE_REAL_AUTH: 'false'

  postgres:
    restart: no
    image: postgres:latest
    container_name: ag-vue-e2e-postgres
    expose:
      - "5432"
    environment:
      POSTGRES_PASSWORD: 'postgres'

  redis:
    restart: no
    image: redis:latest
    container_name: ag-vue-e2e-redis
    expose:
      - "6379"

  rabbitmq:
    restart: no
    image: rabbitmq:latest
    container_name: ag-vue-e2e-rabbitmq
    hostname: rabbit
    expose:
      - "5672"
